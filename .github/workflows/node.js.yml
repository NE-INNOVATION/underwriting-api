# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Underwriting API - Node.js CI

on:
  push:
    branches: [ master, dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v2
    #- name: Use Node.js ${{ matrix.node-version }}
      #uses: actions/setup-node@v1
      #with:
        #node-version: ${{ matrix.node-version }}
    #- run: npm ci
    #- run: npm build --if-present
    - name: Extract branch name
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "##[set-output name=sha_short;]$(echo $(git rev-parse --short HEAD))"
      id: extract_branch
    - name: Set Constants
      id: consts
      run: |
        echo ::set-output name=repo::$(echo ${GITHUB_REPOSITORY})
        echo ::set-output name=sha_short::$(git rev-parse --short HEAD)
        echo ::set-output name=image-name::$(echo quay.io/neinnovationorg/underwriting-api})
        echo ::set-output name=branch::${GITHUB_REF#refs/heads/}
        echo ::set-output name=docker_repo::$(echo /neinnovationorg/underwriting-api) 
    - name: Login to Quay
      id: login
      run:  |
         echo ${{ steps.extract_branch.outputs.branch }}
         echo ${{ steps.extract_branch.outputs.sha_short }}
         podman login quay.io -u ${{ secrets.docker_username }} -p ${{ secrets.docker_password }}
    - name: Build Image using Podman
      run: |
         podman build . -t quay.io/neinnovationorg/underwriting-api:${{ steps.extract_branch.outputs.branch }} --cgroup-manager=cgroupfs
    - name: Push Image to Quay registry
      run: |
          podman push quay.io/neinnovationorg/underwriting-api:${{ steps.extract_branch.outputs.branch }}
    - name: Build and push Images
      uses: docker/build-push-action@v1.1.0
      with:
        username: afu174
        password: ${{ secrets.DOCKER_TOKEN }}
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: docker.pkg.github.com
        # Docker repository to tag the image with
        repository: ne-innovation/underwriting-api/underwriting-api-${{ steps.extract_branch.outputs.branch }}
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: prefill-svc-api-${{ steps.extract_branch.outputs.branch }}
        tag_with_ref: false
        tag_with_sha: false
        # Path to the build context
        path: .
       # # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: ./Dockerfile
        push: true
    - name: OpenShift Dev deploy
      uses: redhat-developer/openshift-actions@v2.0
      with:
        # The URL of the Openshift cluster
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
        # JSON with values to connect to the Openshift cluster
        parameters: '{"username": "${{ secrets.OPENSHIFT_USER }}", "acceptUntrustedCerts": "true", "password":"${{ secrets.OPENSHIFT_PASSWORD }}"}'
        # Oc command to be executed
        cmd: |
          'version'
          'project development'
          'tag --source=docker quay.io/neinnovationorg/underwriting-api:${{ steps.extract_branch.outputs.branch }} development/underwriting-api:${{ steps.extract_branch.outputs.branch }}'
          'rollout latest dc/underwriting-api'
          'rollout status dc/underwriting-api'
    - name: Run Test cases
      uses: matt-ball/newman-action@master
      with:
        collection: postman-test.json
        environment: postman-env.json
    - name: OpenShift Sys deploy
      uses: redhat-developer/openshift-actions@v2.0
      with:
        # The URL of the Openshift cluster
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
        # JSON with values to connect to the Openshift cluster
        parameters: '{"username": "${{ secrets.OPENSHIFT_USER }}", "acceptUntrustedCerts": "true", "password":"${{ secrets.OPENSHIFT_PASSWORD }}"}'
        # Oc command to be executed
        cmd: |
          'version'
          'project sys'
          'tag --source=docker quay.io/neinnovationorg/underwriting-api:${{ steps.extract_branch.outputs.branch }} sys/underwriting-api:${{ steps.extract_branch.outputs.branch }}'
          'rollout latest dc/underwriting-api'
    - name: Scan Image
      uses: Azure/container-scan@v0
      continue-on-error: true
      with:
        image-name: quay.io/neinnovationorg/underwriting-api:${{ steps.extract_branch.outputs.branch }}
        username: ${{ secrets.docker_username }}
        password: ${{ secrets.docker_password }}
        token: ${{ github.token }}
        severity-threshold: HIGH
        run-quality-checks: false
